{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\FrontAuto\\\\FrontEnd\\\\src\\\\CarGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './GridStyles.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarGrid = () => {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [selectedCar, setSelectedCar] = useState({});\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [dateFrom, setDateFrom] = useState(null);\n  const [dateTo, setDateTo] = useState(null);\n  //  const [username,setUsername] = useParams();\n  const {\n    username\n  } = useParams();\n  const [make, setMake] = useState(\"\");\n  useEffect(() => {\n    fetch('https://localhost:7079/api/Car').then(response => response.json()).then(data => {\n      setCars(data);\n      console.log(data[0].make);\n    });\n  }, []);\n  // useEffect(() => {\n  //    //setUsername(username);\n  //    });\n  //https://localhost:7079/api/Booking/AddBooking?car_id=${car_id}&date_from=${dateFrom}&date_to=${dateTo}&user_id=${user_id} <- post booking api\n  const handleBook = car => {\n    setSelectedCar(car);\n    setShowCalendar(true);\n  };\n  const handleBooking = async (dateFrom, dateTo, make, username) => {\n    const response = await fetch(`https://localhost:7079/api/Booking/AddBooking?Make=${make}&date_from=${dateFrom}&date_to=${dateTo}&username=${username}`, {\n      method: 'POST',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        make: selectedCar.make,\n        date_from: dateFrom,\n        date_to: dateTo\n      })\n    }).then(response => {\n      if (response.status === 200) {\n        console.log(response);\n        console.log(response.json());\n      } else {\n        console.log(response);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    const result = await response.json();\n    setCars(cars.map(car => {\n      // if (car.car_id === selectedCar.car_id) {\n      //   return {\n      //     ...car,\n      //     status: \"Booked\"\n      //   }\n      // }\n      return car;\n    }));\n    setShowCalendar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"car-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Book a car, \", username, \"!!!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), cars.map(car => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: car.imagePath,\n        alt: car.make + ' ' + car.model\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Make: \", car.make]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Model: \", car.model]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cost: \", car.cost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capacity: \", car.capacity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", car.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), car.status === \"Free\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBook(car),\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }, this)]\n    }, car.car_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)), showCalendar && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Choose dates:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"From: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateFrom,\n          onChange: e => setDateFrom(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"To: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateTo,\n          onChange: e => setDateTo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBooking(dateFrom, dateTo),\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCalendar(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(CarGrid, \"nDvxLPj2O9vxYjGo+UTIkF9c8hc=\", false, function () {\n  return [useParams];\n});\n_c = CarGrid;\nexport default CarGrid;\nvar _c;\n$RefreshReg$(_c, \"CarGrid\");","map":{"version":3,"names":["React","useState","useEffect","useParams","CarGrid","cars","setCars","selectedCar","setSelectedCar","showCalendar","setShowCalendar","dateFrom","setDateFrom","dateTo","setDateTo","username","make","setMake","fetch","then","response","json","data","console","log","handleBook","car","handleBooking","method","headers","Accept","body","JSON","stringify","date_from","date_to","status","catch","error","result","map","imagePath","model","cost","capacity","car_id","e","target","value"],"sources":["C:/Users/user/FrontAuto/FrontEnd/src/CarGrid.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './GridStyles.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst CarGrid = () => {\r\n  const [cars, setCars] = useState([]);\r\n  const [selectedCar, setSelectedCar] = useState({});\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n  const [dateFrom, setDateFrom] = useState(null);\r\n  const [dateTo, setDateTo] = useState(null);\r\n//  const [username,setUsername] = useParams();\r\n  const { username } = useParams();\r\n  const[make,setMake]=useState(\"\");\r\n  useEffect(() => {\r\n    fetch('https://localhost:7079/api/Car')\r\n      .then(response => response.json())\r\n      .then(data => {setCars(data);\r\n      console.log(data[0].make)});\r\n  }, []);\r\n  // useEffect(() => {\r\n  //    //setUsername(username);\r\n  //    });\r\n  //https://localhost:7079/api/Booking/AddBooking?car_id=${car_id}&date_from=${dateFrom}&date_to=${dateTo}&user_id=${user_id} <- post booking api\r\n  const handleBook = (car) => {\r\n    setSelectedCar(car);\r\n    setShowCalendar(true);\r\n  };\r\n\r\n  const handleBooking = async (dateFrom, dateTo, make, username ) => {\r\n    const response = await fetch(`https://localhost:7079/api/Booking/AddBooking?Make=${make}&date_from=${dateFrom}&date_to=${dateTo}&username=${username}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        make: selectedCar.make,\r\n        date_from: dateFrom,\r\n        date_to: dateTo,\r\n      }),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        console.log(response);\r\n        console.log(response.json());\r\n\r\n      } else {\r\n        console.log(response);\r\n}\r\n    })\r\n\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n    const result = await response.json();\r\n    setCars(cars.map(car => {\r\n      // if (car.car_id === selectedCar.car_id) {\r\n      //   return {\r\n      //     ...car,\r\n      //     status: \"Booked\"\r\n      //   }\r\n      // }\r\n      return car;\r\n    }));\r\n    setShowCalendar(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"car-grid\">\r\n      <h3 >Book a car, {username}!!!</h3>\r\n      {cars.map(car => (\r\n        <div className=\"car-card\" key={car.car_id}>\r\n          <img src={car.imagePath} alt={car.make + ' ' + car.model} />\r\n          <p>Make: {car.make}</p>\r\n          <p>Model: {car.model}</p>\r\n          <p>Cost: {car.cost}</p>\r\n          <p>Capacity: {car.capacity}</p>\r\n          <p>Status: {car.status}</p>\r\n          {car.status === \"Free\" && <button onClick={() => handleBook(car)}>Book</button>}\r\n          {/* {car.status === \"Booked\" && <button onClick={() => handleCancel(car)}>Cancel</button>} */}\r\n\r\n        </div>\r\n      ))}\r\n      {showCalendar && (\r\n        <div className=\"calendar-popup\">\r\n          <h3>Choose dates:</h3>\r\n          <p>From: <input type=\"date\" value={dateFrom} onChange={(e) => setDateFrom(e.target.value)} /></p>\r\n          <p>To: <input type=\"date\" value={dateTo} onChange={(e) => setDateTo(e.target.value)} /></p>\r\n          <button onClick={() => handleBooking(dateFrom, dateTo)}>Book</button>\r\n          <button onClick={() => setShowCalendar(false)}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}